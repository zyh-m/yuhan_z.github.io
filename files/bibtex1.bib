@article{doi:10.1061/JCCEE5.CPENG-4884,
author = {Yuhan Zhou  and Wawan Solihin  and Justin K. W. Yeoh },
title = {Facilitating Knowledge Transfer during Code Compliance Checking Using Conceptual Graphs},
journal = {Journal of Computing in Civil Engineering},
volume = {37},
number = {5},
pages = {05023001},
year = {2023},
doi = {10.1061/JCCEE5.CPENG-4884},

URL = {https://ascelibrary.org/doi/abs/10.1061/JCCEE5.CPENG-4884},
eprint = {https://ascelibrary.org/doi/pdf/10.1061/JCCEE5.CPENG-4884}
,
    abstract = { The rules in building codes are composed of language, logic structure, and the embedded knowledge that requires further articulation from rule experts. This greatly increases the complexity of rule interpretation. The conceptual graph (CG) is used as a graph-based representation method to capture such knowledge and transfer it to other actors in the compliance checking process. However, due to its subjectivity, it is difficult to ensure the quality of the CG to achieve minimal knowledge loss. This paper proposes a method using reusable CG patterns to reduce the knowledge loss caused by the opacity of concepts in rules, hence better facilitating knowledge transfer using CGs. The rules and their corresponding CGs are analyzed and compared. An assessment framework is used to assess CGs for correctness, completeness, complexity, and comprehensibility. A group of reusable CG patterns is then generated based on the analysis results of concepts in existing CGs. In a case study, rules selected from two types of building codes are used to validate the proposed methods. The results successfully demonstrate the effectiveness of the CG in facilitating knowledge transfer. Moreover, the comparison of quality between original CGs and improved CGs shows that using reusable CG patterns can effectively ease the creation of new CGs and improve its consistency. Automated code compliance checking requires close collaboration between experts and programmers to encode building codes in a computer-executable format for real-world implementation. The challenge is that experts possess the domain knowledge, while programmers are familiar with implementation. This communication gap between experts and programmers may result in inconsistencies or errors in the automated code checking system. To bridge this gap, a method that can facilitate communication between experts and programmers called the conceptual graph (CG) is used. However, the current CG still requires significant effort, and it may be subjectively interpreted. This paper introduces reusable CGs to improve clarity and reduce the effort needed. The paper elaborates how such reusable CGs may be developed and how it may be assessed in real situations. A validation case study is conducted on two types of building codes, and results indicate the reusable CG is a viable tool to improve clarity and reduce potential errors. The contributions of this paper will benefit the current state of automated code compliance checking by introducing a method to clearly represent concepts within building codes, thereby reducing potential rework arising from ambiguous contextual concepts in the building code. }
}
